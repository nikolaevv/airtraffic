// Code generated by MockGen. DO NOT EDIT.
// Source: get_list.go

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/nikolaevv/airtraffic/internal/model"
)

// MockGetListAdaptor is a mock of GetListAdaptor interface.
type MockGetListAdaptor struct {
	ctrl     *gomock.Controller
	recorder *MockGetListAdaptorMockRecorder
}

// MockGetListAdaptorMockRecorder is the mock recorder for MockGetListAdaptor.
type MockGetListAdaptorMockRecorder struct {
	mock *MockGetListAdaptor
}

// NewMockGetListAdaptor creates a new mock instance.
func NewMockGetListAdaptor(ctrl *gomock.Controller) *MockGetListAdaptor {
	mock := &MockGetListAdaptor{ctrl: ctrl}
	mock.recorder = &MockGetListAdaptorMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockGetListAdaptor) EXPECT() *MockGetListAdaptorMockRecorder {
	return m.recorder
}

// GetFlights mocks base method.
func (m *MockGetListAdaptor) GetFlights(ctx context.Context) ([]model.Flight, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetFlights", ctx)
	ret0, _ := ret[0].([]model.Flight)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetFlights indicates an expected call of GetFlights.
func (mr *MockGetListAdaptorMockRecorder) GetFlights(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetFlights", reflect.TypeOf((*MockGetListAdaptor)(nil).GetFlights), ctx)
}
