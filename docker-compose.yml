version: '3.8'

services:
    db:
        image: postgres:14-alpine
        volumes:
            - ./postgres_data:/var/lib/postgresql/data
        environment:
            - POSTGRES_DB=airtraffic
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=postgres
        healthcheck:
            test: [ "CMD-SHELL", "pg_isready", "-d", "db_prod" ]
            interval: 30s
            timeout: 60s
            retries: 5
            start_period: 80s
        ports:
            - "5433:5432"
        networks:
            - postgres

    app:
        build:
            context: .
        container_name: app
        ports:
            - "8080:8080"
        depends_on:
            db:
                condition: service_healthy
        networks:
            - postgres

    migrate:
        image: migrate/migrate
        networks:
            - postgres
        volumes:
            - ./migration:/migration
        command: [ "-path", "/migration", "-database",  "postgres://postgres:postgres@db:5432/airtraffic?sslmode=disable", "up" ]
        links:
            - db
        depends_on:
            db:
                condition: service_healthy

    pgadmin:
        image: dpage/pgadmin4
        container_name: pgadmin4_container
        restart: always
        networks:
            - postgres
        depends_on:
            - db
            - app
        ports:
            - "5050:80"
        environment:
            PGADMIN_DEFAULT_PASSWORD: admin
            PGADMIN_DEFAULT_EMAIL: example@mail.com
            PGADMIN_CONFIG_SERVER_MODE: 'False'
        volumes:
            - pgadmin-data:/var/lib/pgadmin

volumes:
    my-db:
    pgadmin-data:

networks:
    postgres:
